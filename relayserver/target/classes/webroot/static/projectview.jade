doctype html
html(ng-app='')
  head
    include commonheader
    title
    script(src='https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/ace.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/ext-modelist.js')
    script(src='js/jquery.layout-1.4.1.js')
    script(src='js/jquery.ui.all.js')
    script(src='js/jqueryFileTree.js', type='text/javascript')
    link(rel='stylesheet', href='css/layout-default-latest.css', type='text/css')
    link(rel='stylesheet', href='css/projectview.css', type='text/css')
    link(href='css/jqueryFileTree.css', rel='stylesheet', type='text/css', media='screen')
  body
    .ui-layout-center
      // code editor & logcat
      button#playbtn.btn.btn-success
        span.glyphicon.glyphicon-play  Run
      #editor
      // canvas#imgRecvTester(width='500', height='500')
    .ui-layout-north
      include commonnavbar
    .ui-layout-west
      // file tree column
      #projectTree.tree_wrap
    script.
      var editor = ace.edit("editor");
      var frameBuffer = new Image();
      editor.setTheme("ace/theme/monokai");
      editor.getSession().setMode("ace/mode/text");
      //editor.setReadOnly(true);
      var modelist = ace.require("ace/ext/modelist");
      function resizeBrowser() {
      return $('#editor').height($(window).height()/100*85)
      ,$('#projectTree').height($(window).height()/100*85);
      };
      $(window).resize(resizeBrowser);
      resizeBrowser();
      $("#playbtn").click( function(){
      //alert('button clicked');
      requestAysnc('/run_vm', 'post', { command:"run_vm" }, function(data){
      console.log("run btn success function start");
      if(data) console.log(data);
      else console.log("empty response");
      frameBuffer.src = 'data:image/jpg;base64,' + data.frameBuffer;
      console.log(frameBuffer);
      document.getElementById('imgRecvTester').getContext('2d').drawImage(frameBuffer,0,0);
      console.log(frameBuffer);
      }, null);
      });
      $(document).ready( function(){
      $("body").layout( {
      defaults: {
      size:                   "auto"
      ,   contentSelector:        ".content"  // inner div to auto-size so only it scrolls, not the entire pane!
      ,   contentIgnoreSelector:  "span"      // 'paneSelector' for content to 'ignore' when measuring room for content
      ,   togglerLength_open:     35          // WIDTH of toggler on north/south edges - HEIGHT on east/west edges
      ,   togglerLength_closed:   35          // "100%" OR -1 = full height
      ,   hideTogglerOnSlide:     false        // hide the toggler when pane is 'slid open'
      ,   togglerTip_open:        "Close This Pane"
      ,   togglerTip_closed:      "Open This Pane"
      ,   resizerTip:             "Resize This Pane"
      //  effect defaults - overridden on some panes
      ,   fxName:                 "slide"     // none, slide, drop, scale
      ,   fxSpeed_open:           750
      ,   fxSpeed_close:          1500
      ,   fxSettings_open:        { easing: "easeInQuint" }
      ,   fxSettings_close:       { easing: "easeOutQuint" }
      }
      ,
      north: {
      spacing_open:           0           // cosmetic spacing
      ,   togglerLength_open:     0           // HIDE the toggler button
      ,   togglerLength_closed:   -1          // "100%" OR -1 = full width of pane
      ,   resizable:              false
      ,   slidable:               false
      ,   fxName:                 "none"
      }
      ,   west: {
      size:                   .22
      ,   spacing_closed:         2
      ,   togglerLength_closed:   -1
      ,   resizable:              true
      ,   slidable:               false
      }
      });
      requestAysnc('/treebase','post',{pid : 1},function(p_path){
      $('#projectTree').fileTree({ root: p_path }, function(file) {
      requestAysnc('/openfile','post',{filepath: file, pid : 1}, function(data) {
      editor.getSession().setMode(modelist.getModeForPath(file).mode);  
      editor.setValue(data);
      editor.gotoLine(1);
      }, function(){});
      })
      },function(){});
      });
